# Standart CERN Make rules
include /acc/src/dsc/co/Make.auto

# Extremely simplified Quiet/Verbose
ifdef V
  ifeq ("$(origin V)", "command line")
    VERBOSE = $(V)
  endif
endif
ifndef VERBOSE
  VERBOSE = 0
endif

ifeq ($(VERBOSE),1)
  Q   =
  LD  = $(LINK.o)
  QLD =
  QNM =
else
   Q   = @

  _LD := $(LINK.o)
   LD  = @echo 'LD   $@'; $(_LD)

  _CC := $(CC)
   CC  = @echo 'CC   $@'; $(_CC)

  QNM  = @echo 'KSYM $@'

  _AR := $(AR)
   AR  = echo 'AR   $@'; $(_AR) 2>&1>&/dev/null
endif

# General settings
DRVR        = Ctc
BUS         = VME
UTILINSTDIR = /acc/local/$(CPU)

# Redefine
%.$(CPU).o: %.c
	$(Q)$(COMPILE.c) $< $(OUTPUT_OPTION)

PHONY := _all
_all:

# For debugging
#SHELL += -x

# Do not print "Entering directory ..."
MAKEFLAGS += --no-print-directory

unexport BLDTYPE PASSTARG

# some file extentions
EXTDLL	= .dll
EXTSO	= .so
EXTLIB	= .a
EXTOBJ	= .$(CPU).o
EXTEXE	=

SRCCSFXS := .c
SRCCXXSFXS := .cpp .cxx .C .cc .CC
SRCSFXS := $(SRCCSFXS) $(SRCCXXSFXS)
FLTSRCFILES = $(filter $(addprefix %,$(SRCSFXS)),$(SRCFILES))
OBJFILES = $(addsuffix $(EXTOBJ),$(notdir $(basename $(FLTSRCFILES)))) $(ADDOBJFILES)
OBJS = $(addprefix $(OBJDIR)/,$(OBJFILES)) $(ADDOBJS)
LIBS = $(join $(addsuffix $(OBJDIR)/,$(dir $(LIBFILES))),$(notdir $(LIBFILES)))

# Buildup all include pathes
INCFLAGS = $(addprefix -I,$(INCDIRS)) $(addprefix -I,$($(BLDTYPE).INCDIRS)) $(ADDINCLUDES)

BASECFLAGS   = -Wall
BASECXXFLAGS = -Wall -Wno-reorder

# debug/optimization flags
dbg.BLDTFLAGS = -g -DDEBUG -D_DEBUG
rls.BLDTFLAGS = -O2
drv.BLDTFLAGS =  # Drivers are build without debug and optimization
BLDTFLAGS = $($(BLDTYPE).BLDTFLAGS)

# next 3 are not used for now, but i'll keep them 'just-in-case-if...'
BASELDSHFLAGS = $(LDSHFLAGS) $(HOSTLDSHFLAGS) $(BLDTFLAGS) $(ADDLDSHFLAGS)
BASELDFLAGS = $(LDFLAGS) $(HOSTLDFLAGS) $(BLDTFLAGS) $(ADDLDFLAGS)
BASEARFLAGS = $(ARFLAGS) $(HOSTARFLAGS) $(ADDARFLAGS)

# for C++
CXXFLAGS = $(BASECXXFLAGS) $(HOSTCXXFLAGS) $(DEFFLAGS) $(INCFLAGS) $(BLDTFLAGS) $(ADDCXXFLAGS)

# for C
CFLAGS = $(BASECFLAGS) $(HOSTCFLAGS) $(DEFFLAGS) $(INCFLAGS) $(BLDTFLAGS) $(ADDCFLAGS)

# Just a reminder.
# $(COMPILE.c) == $(CC) $(CFLAGS) $(CPPFLAGS) -c
# $(LINK.o) == $(CC) $(LDFLAGS) n.o $(LOADLIBES) $(LDLIBS)
# $(OUTPUT_OPTION) == -o $@
# %.$(CPU).o: %.c
#       $(COMPILE.c) $< $(OUTPUT_OPTION)

vpath %$(EXTOBJ) $(OBJDIR)

# Our Primary target
ifneq ($(SUBDIRS),)

_all $(MAKECMDGOALS): build-subdirs

FTARGETS = $(filter-out all linux lynx deliver, $(MAKECMDGOALS))
COMPILE  = $(MAKE) $(SUBMFNAME) -C $$dir $(MAKECMDGOALS)

endif # ifeq ($(SUBDIRS),)

# Cleaning up
clean clear:


# Object files directory buidup
OBJDIR = $(ISP)_$(BLDTYPE)
$(ISP)_%:
	$(Q)mkdir -p $@

# Executable && drivers goes here
FINAL_DEST := ../object_$(DRVR)
$(FINAL_DEST):
	$(Q)mkdir -p $@

# Descent into subdirectories
%-subdirs:
	$(if $(FTARGETS), $(error wrong/unsupported target(s) "$(FTARGETS)"))
	@for dir in $(SUBDIRS) _dummy_dir_ ; \
	do \
	    if [ $$dir != _dummy_dir_ -a -d $$dir ]; then \
		echo -e "\n---------[ Processing '$$dir' directory ]--------------"; \
		$(COMPILE); \
		if [ $$? -eq 2 ]; then exit 1; fi; \
	    fi; \
	done

# For producing object files. Just an example of possible redefinition.
#OUTPUT_OPTION +=; mv $*.$(CPU).o $(OBJDIR)/$@

ifndef BLDTYPE
BLDTYPE = dbg
endif

PHONY += all
_all: all

PHONY += FORCE
FORCE:

# Declare the contents of the .PHONY variable as phony.  We keep that
# information in a variable so we can use it in if_changed and friends.
.PHONY: $(PHONY)